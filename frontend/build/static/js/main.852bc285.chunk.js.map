{"version":3,"sources":["Assets/Icon_faded.svg","Contexts/UserContext.js","Contexts/DeliverablesContext.js","Components/Header.js","Components/Deliverable.js","Components/Deliverables.js","Components/CreateDeliverable.js","Components/UniqueURL.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","UserContext","createContext","UserContextProvider","props","_useState","useState","_useState2","Object","slicedToArray","id","setId","react_default","a","createElement","Provider","value","children","DeliverablesContext","DeliverablesContextProvider","deliverables","setDeliverables","useContext","removeDeliverable","itemId","filter","deliverable","axios","post","concat","then","res","console","log","addDeliverable","name","description","due","newId","uuid","v4","toConsumableArray","Header","AppBar","position","Toolbar","style","backgroundColor","Typography","variant","Deliverable","_props$deliverable","fullDaysLeft","differenceInDays","parse","startOfToday","Card","padding","CardContent","gutterBottom","component","toLocaleDateString","color","Paper","margin","Button","onClick","bind","this","Deliverables","sort","b","Box","Container","minHeight","textTransform","length","m","className","Grid","container","spacing","map","item","xs","lg","md","key","src","faded_icon","alt","width","opacity","alignItems","justifyContent","CreateDeliverable","title","desc","preserve","input","setInput","handleChange","e","target","Container_default","maxWidth","Form_default","onSubmit","preventDefault","Group","Label","Control","type","placeholder","onChange","as","Text","defaultChecked","Button_default","bg","UniqueURL","short_id","window","location","pathname","substr","localStorage","setItem","getItem","shortid","generate","useEffect","get","data","href","origin","App","Contexts_UserContext","Contexts_DeliverablesContext","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.852bc285.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Icon_faded.0a27301d.svg\";","import React, {createContext, useState} from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst UserContextProvider = (props) => {\r\n    const [id, setId] = useState(\"\");\r\n\r\n    return (\r\n        <UserContext.Provider value={{id,setId}}>\r\n            { props.children }\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserContextProvider;","import React, {createContext, useState, useContext} from 'react';\r\nimport uuid from 'uuid';\r\nimport axios from 'axios';\r\nimport { UserContext } from './UserContext';\r\n\r\nexport const DeliverablesContext = createContext();\r\n\r\nconst DeliverablesContextProvider = (props) => {\r\n    const [deliverables, setDeliverables] = useState([])\r\n    const {id} = useContext(UserContext);\r\n\r\n    const addDeliverable = (name,description,due) => {\r\n        const newId = uuid.v4();\r\n\r\n        //Make local changes\r\n        setDeliverables([...deliverables, {\r\n            id: newId,\r\n            name: name,\r\n            description: description,\r\n            due: due\r\n        }])\r\n\r\n        //Update DB\r\n        axios.post(`/api/addItem/${id}`, {\r\n            id: newId,\r\n            name: name,\r\n            description: description,\r\n            due: due\r\n        })\r\n        .then(res => {\r\n            console.log(res);\r\n        })\r\n    }\r\n\r\n    const removeDeliverable = (itemId) => {\r\n        //Make local changes\r\n        setDeliverables(deliverables.filter((deliverable) => {\r\n            return deliverable.id !== itemId;\r\n        }))\r\n        \r\n        //Update DB\r\n        axios.post(`/api/removeItem/${id}`, {\r\n            id: itemId,\r\n        })\r\n        .then(res => {\r\n            console.log(res);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <DeliverablesContext.Provider value={{deliverables, removeDeliverable, addDeliverable, setDeliverables}}>\r\n            { props.children }\r\n        </DeliverablesContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DeliverablesContextProvider","import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <AppBar position=\"static\">\r\n                <Toolbar style={{backgroundColor:\"#8AAAFF\"}}>\r\n                    <Typography variant=\"h3\">Todo List</Typography> \r\n                </Toolbar>\r\n                <Toolbar variant=\"dense\" style={{backgroundColor:\"#6699FF\"}}>\r\n                    <Typography variant=\"body1\">Deadline management made easier</Typography>  \r\n                </Toolbar>\r\n            </AppBar>          \r\n        </header>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport '../Css/deliverable.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport { DeliverablesContext } from '../Contexts/DeliverablesContext';\r\nimport { CardContent, Typography } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {parse, startOfToday, differenceInDays} from 'date-fns';\r\n\r\nexport default function Deliverable(props) {\r\n    const {removeDeliverable} = useContext(DeliverablesContext);\r\n    const {id, name, description, due} = props.deliverable;\r\n    const fullDaysLeft = differenceInDays(parse(due),startOfToday());\r\n\r\n    return (\r\n        <Card style={{padding:\"1rem\"}}>\r\n            <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">{name}</Typography>\r\n                <Typography variant=\"h6\">Due on: {parse(due).toLocaleDateString()}</Typography>\r\n                <Typography variant=\"body1\" style={{color:\"blue\"}}>{fullDaysLeft} {fullDaysLeft === 1? \"day left\" : \"days left\"}</Typography>\r\n                <Paper style={{margin:\"1em\",padding:\"0.5em\"}}>\r\n                    <Typography variant=\"body1\">{description}</Typography>\r\n                </Paper>\r\n            </CardContent>              \r\n                <hr/>\r\n                <Button onClick={removeDeliverable.bind(this, id)}>Mark Complete</Button>\r\n        </Card>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport { DeliverablesContext } from '../Contexts/DeliverablesContext';\r\nimport Deliverable from './Deliverable'\r\nimport faded_icon from '../Assets/Icon_faded.svg'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Deliverables() {\r\n    const {deliverables} = useContext(DeliverablesContext);\r\n    deliverables.sort((a,b) => {\r\n        return a.due > b.due;\r\n    })\r\n\r\n    return (\r\n        <Box p=\"1rem\">\r\n        <Container style={{backgroundColor:\"#555\", minHeight:\"50vh\", padding:\"1rem\"}}>\r\n            <Typography variant=\"h4\" style={{color:\"#fff\",textTransform:\"uppercase\"}}>{deliverables.length > 0? deliverables.length > 1 ? `${deliverables.length} things due` : \"Just one thing due\" :\"\"}</Typography>\r\n            <Typography m={2} variant=\"body1\" className=\"text-left mx-3\" style={{color:\"#fff\"}}>{deliverables.length > 0?\"\": `It appears you have nothing left to do :)`}</Typography>\r\n            <Grid container spacing={2}>         \r\n                {deliverables.map((deliverable) => (\r\n                    <Grid item xs={12} lg={4} md={6} >\r\n                        <Deliverable key={deliverable.id} deliverable={deliverable}/>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <img src={faded_icon} alt=\"\" style={{margin:\"1rem\", width:\"4%\", opacity:\"0.5\",alignItems:\"flex-center\", justifyContent:\"center\"}}/>\r\n        </Container>\r\n        </Box>\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container';\r\nimport { DeliverablesContext } from '../Contexts/DeliverablesContext';\r\nimport {startOfToday} from 'date-fns';\r\n\r\nexport default function CreateDeliverable() {\r\n    const {addDeliverable} = useContext(DeliverablesContext);\r\n\r\n    const [input, setInput] = useState({\r\n        title: \"\",\r\n        desc:\"\",\r\n        due: startOfToday().toLocaleDateString(),\r\n        preserve: false\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setInput({\r\n            title: e.target.id === \"title\"? e.target.value : input.title,\r\n            desc: e.target.id === \"desc\"? e.target.value : input.desc,\r\n            due: e.target.id === \"due\"? e.target.value : input.due,\r\n            preserve: e.target.id === \"preserve\"? !input.preserve : input.preserve\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addDeliverable(input.title, input.desc, input.due);\r\n\r\n        if (!input.preserve){\r\n            setInput({\r\n                title:\"\",\r\n                desc: \"\",\r\n                due: startOfToday().toLocaleDateString(),\r\n                preserve:false\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container style={{maxWidth:\"60%\"}}>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label>Add a new deliverable</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Title\" id=\"title\" value={input.title} onChange={handleChange}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Control as=\"textarea\" placeholder=\"Enter Description\" id=\"desc\" value={input.desc} onChange={handleChange}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Control type=\"date\" id=\"due\" value={input.due} onChange={handleChange}/>\r\n                    <Form.Text className=\"text-muted text-left\">\r\n                        The above date will be reflected as the due date.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <input type='checkbox' id=\"preserve\" defaultChecked={input.preserve} onClick={handleChange}/>\r\n                    <span> Preserve form data upon submission.</span>\r\n                </Form.Group>\r\n                <Button type=\"submit\" bg=\"primary\" className=\"mb-2\">Submit</Button>\r\n            </Form>\r\n        </Container>\r\n\r\n    )\r\n}\r\n","import React, {useEffect, useContext} from 'react';\r\nimport shortid from 'shortid';\r\nimport axios from 'axios';\r\nimport { DeliverablesContext } from '../Contexts/DeliverablesContext';\r\nimport { UserContext } from '../Contexts/UserContext';\r\nimport Container from \"@material-ui/core/Container\"\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default function UniqueURL() {\r\n    let short_id = \"\";\r\n    const {setId} = useContext(UserContext);\r\n    const {setDeliverables} = useContext(DeliverablesContext);\r\n\r\n    if (window.location.pathname !== \"/\"){\r\n        short_id = window.location.pathname.substr(1,9);\r\n        localStorage.setItem(\"uniqueid\", short_id);\r\n        setId(short_id);\r\n    }\r\n\r\n    else if (localStorage.getItem(\"uniqueid\") != null){\r\n        short_id = localStorage.getItem(\"uniqueid\");\r\n        setId(short_id);\r\n    }\r\n    else {\r\n        short_id = shortid.generate();\r\n        setId(short_id);\r\n        localStorage.setItem(\"uniqueid\", short_id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/getUser/${short_id}`)\r\n        .then((res) => {\r\n            setDeliverables(res.data);\r\n        })\r\n    }, [short_id, setDeliverables]);\r\n\r\n    return (\r\n        <Container>\r\n            <hr/>\r\n          <Typography variant=\"body1\"><a href={`${window.location.origin}/${short_id}`}>{window.location.origin}/${short_id}</a> to access your entries in the future.</Typography>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport DeliverablesContextProvider from './Contexts/DeliverablesContext'\r\nimport Header from './Components/Header';\r\nimport Deliverables from './Components/Deliverables';\r\nimport CreateDeliverable from './Components/CreateDeliverable';\r\nimport UniqueURL from './Components/UniqueURL';\r\nimport UserContextProvider from './Contexts/UserContext';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    <UserContextProvider>\r\n      <DeliverablesContextProvider>\r\n        <Header/>\r\n        <UniqueURL/>\r\n        <Deliverables/>\r\n        <CreateDeliverable/>\r\n      </DeliverablesContextProvider>\r\n    </UserContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}